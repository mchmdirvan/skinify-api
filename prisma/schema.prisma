// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(ulid())

  username String @unique
  email    String @unique
  fullName String

  password Password?

  carts Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @default(ulid())

  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id String @id @default(ulid())

  items CartItem[]

  user   User?   @relation(fields: [id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id String @id @default(ulid())

  quantity Int @default(1)

  cart   Cart   @relation(fields: [cartId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  cartId String

  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id   String @id @default(cuid())
  slug String @unique

  name     String
  imageUrl String

  models Model[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Model {
  id   String @id @default(cuid())
  slug String @unique

  name     String
  imageUrl String

  Brand     Brand?  @relation(fields: [brandSlug], references: [slug])
  brandSlug String?

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id   String @id @default(cuid())
  slug String @unique

  name     String
  sku      String? @unique
  imageUrl String?

  stockQuantity Int @default(0)
  price         Int

  Model     Model?  @relation(fields: [modelSlug], references: [slug])
  modelSlug String? @map("modelId")

  CartItem CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
